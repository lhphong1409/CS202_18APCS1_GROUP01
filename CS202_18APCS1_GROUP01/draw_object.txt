bird :
left to right
<< "(   _  )" << "\n"
<< "(__(.)=)" << "\n"
<< "(\___) )";
 
right to left
<< "(  _   )" << "\n"
<< "(=(.)__)" << "\n"
<< "( (___/)";

/*-----------------------*/

truck: 
left to right 
<< "(        __    )" << "\n"
<< "( ______|__\__ )" << "\n"
<< "(|      |     |)" << "\n"
<< "(`(o)------(o)')";

right to left
<< "(    __        )" << "\n"
<< "( __/__|______ )" << "\n"
<< "(|     |      |)" << "\n"
<< "(`(o)------(o)')";

/*-----------------------*/

dinosaur:
left to right 
<< "(              __ )" << "\n"
<< "(     _.----._/ _))" << "\n"
<< "(    /         /  )" << "\n"
<< "( __/ (  | (  |   )" << "\n"
<< "(/__.-'|_|--|_|   )";

right to left
<< "( __              )" << "\n"
<< "((_ \_.----._     )" << "\n"
<< "(  \         \    )" << "\n"
<< "(   |  ) |  ) \__ )" << "\n"
<< "(   |_|--|_|'-.__\)";

/*-----------------------*/

car: 
left to right
<< "(  ______     )" << "\n"
<< "( /|_||_\`.__ )" << "\n"
<< "((   _    _ _\)" << "\n"
<< "( `-(_)--(_)-')";

right to left 
<< "(      _____  )" << "\n"
<< "( ___./_||_|\ )" << "\n"
<< "(/_ _    _   ))" << "\n"
<< "(`-(_)--(_)-' )";

/*-----------------------*/

bus: 
left to right
<< "( _________________________   )" << "\n"
<< "(|   |     |     |    | |  \  )" << "\n"
<< "(|___|_____|_____|____|_|___\ )" << "\n"
<< "(|                    | |    \)" << "\n"
<< "(`--(o)(o)--------------(o)--')";

right to left
<< "(   _________________________ )" << "\n"
<< "(  /  | |    |     |     |   |)" << "\n"
<< "( /___|_|____|_____|_____|___|)" << "\n"
<< "(/    | |                    |)" << "\n"
<< "('--(o)--------------(o)(o)--')";
